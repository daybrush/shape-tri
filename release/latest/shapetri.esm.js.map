{"version":3,"file":"shapetri.esm.js","sources":["../src/consts.ts","../src/index.ts"],"sourcesContent":["export const TOP = \"top\";\nexport const BOTTOM = \"bottom\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport type DIRECTION = \"top\" | \"bottom\" | \"left\" | \"right\";\nexport const REVERSE = {\n  [TOP]: BOTTOM,\n  [BOTTOM]: TOP,\n  [LEFT]: RIGHT,\n  [RIGHT]: LEFT,\n};\nexport const TRI_CLASS = \"__shape-tri-\";\nexport const SIDE_CLASS = `${TRI_CLASS}side`;\nexport const POSITION_ABSOLUTE = \"position:absolute;\";\n","import { BOTTOM, TOP, RIGHT, LEFT, REVERSE, DIRECTION, SIDE_CLASS, POSITION_ABSOLUTE, TRI_CLASS } from \"./consts\";\n\nfunction splitUnit(text: string) {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { unit: \"\", value: NaN };\n  }\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { unit, value: parseFloat(value) };\n}\n\nfunction getSideCSS(strokeWidth: string, isVertical: boolean) {\n  const x = isVertical ? strokeWidth : \"50%\";\n  const y = isVertical ? \"50%\" : strokeWidth;\n\n  return `${POSITION_ABSOLUTE}width:100%;height:100%;border-radius:inherit;background-color:inherit;` +\n          `transform-origin:${x} ${y};`;\n}\n\nfunction makeDOM(tag: string, className: string) {\n  const el = document.createElement(tag);\n\n  el.className = className;\n  return el;\n}\nexport function tri({\n  className = `${TRI_CLASS}triangle`,\n  strokeWidth = 0,\n  stroke = \"black\",\n  fill = \"transparent\",\n  direction = BOTTOM,\n  container = makeDOM(\"div\", className),\n}: {\n  strokeWidth: number | string,\n  className?: string,\n  container?: HTMLElement,\n  fill?: string,\n  direction?: DIRECTION,\n  stroke?: string\n}) {\n  const {unit: strokeUnit, value: strokeValue} = splitUnit(`${strokeWidth}`);\n  const half = `${strokeValue / 2}${strokeUnit}`;\n  const isVertical = direction === TOP || direction === BOTTOM;\n  const sideCSS = getSideCSS(half, isVertical);\n  const directionProperty = isVertical ? LEFT : TOP;\n  const sign = direction === TOP || direction === RIGHT ? -1 : 1;\n  const width = isVertical ? \"100%\" : strokeWidth;\n  const height = isVertical ? strokeWidth : \"100%\";\n  // (50% - strokeWidth / 2) * r3 + strokeWidth\n  const padding = isVertical ? `calc(50% * 1.7321 + ${strokeWidth} * 0.132)` :\n  // (100% - strokeWidth) / r3 * 2 + strokeWidth\n    `calc(200% / 1.7321 - ${strokeWidth} * 1.154 + ${strokeWidth})`;\n  const reverseDirection = REVERSE[direction];\n  const sideHTML = `<div class=\"${SIDE_CLASS}1\" style=\"${POSITION_ABSOLUTE}${reverseDirection}: 0;\n  display:inline-block;width:${width};height:${height};border-radius:${half};\n  background:${stroke};\"><div class=\"${SIDE_CLASS}2\"\n  style=\"${sideCSS}transform:rotate(${sign * 60}deg);\"></div><div class=\"${SIDE_CLASS}3\"\n  style=\"${sideCSS}${directionProperty}:100%;\n  margin-${directionProperty}:-${strokeWidth};\n  transform:rotate(${sign * 120}deg)\"></div></div><div class=\"${TRI_CLASS}percent\" style=\"position:relative;\n  width:100%;padding-top:${padding};\"\n  ></div>`;\n\n  container.insertAdjacentHTML(\"beforeend\", sideHTML);\n\n  return container;\n}\n\nexport const VERSION = \"#__VERSION__#\";\n"],"names":["TOP","BOTTOM","LEFT","RIGHT","REVERSE","_a","TRI_CLASS","SIDE_CLASS","POSITION_ABSOLUTE","splitUnit","text","matches","exec","unit","value","NaN","parseFloat","getSideCSS","strokeWidth","isVertical","x","y","makeDOM","tag","className","el","document","createElement","tri","_b","_c","_d","stroke","_e","fill","_f","direction","_g","container","_h","strokeUnit","strokeValue","half","sideCSS","directionProperty","sign","width","height","padding","reverseDirection","sideHTML","insertAdjacentHTML","VERSION"],"mappings":"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"}